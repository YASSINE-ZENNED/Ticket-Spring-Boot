version: '3.9'

services:
 eureka-serverTEST:
   image: yassinezenned/eureka-server:latest
   container_name: eureka-serverTEST
   ports:
     - "8761:8761"
   environment:
     - SPRING_PROFILES_ACTIVE=docker
   networks:
     - spring

 Event-service:
    image: yassinezenned/events:latest
    container_name: Event
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring

    depends_on:
      - postgresTEST
      - eureka-serverTEST
 Auth-service:
   image: yassinezenned/auth:latest
   container_name: Auth
   ports:
     - "8081:8081"
   environment:
     - SPRING_PROFILES_ACTIVE=docker
   networks:
     - spring
     - postgres
   depends_on:
     - postgresTEST
     - eureka-serverTEST
 Ticket-service:
   image: yassinezenned/eventticket:latest
   container_name: Ticket
   ports:
     - "8083:8083"
   environment:
     - SPRING_PROFILES_ACTIVE=docker
   networks:
     - spring
     - postgres
   depends_on:
     - postgresTEST
     - eureka-serverTEST

 pgadminTicketTEST:
   container_name: pgadminTicketTEST
   image: dpage/pgadmin4
   environment:
     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
     PGADMIN_CONFIG_SERVER_MODE: 'False'
   volumes:
     - pgadmin:/var/lib/pgadmin
   ports:
     - "5051:80"
   networks:
     - postgres
   restart: unless-stopped

 postgresTEST:
   container_name: postgresTEST
   image: postgres
   environment:
     POSTGRES_USER: root
     POSTGRES_PASSWORD: root
     PGDATA: /data/postgres
   volumes:
     - postgres3:/data/postgres
   ports:
     - "5434:5432"
   networks:
     - postgres
   restart: unless-stopped


networks:

  postgres:
    driver: bridge
  spring:
    driver: bridge
volumes:
  postgres3:
  pgadmin:
